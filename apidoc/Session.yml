---
name: Modules.URLSession.Session
summary: The session object used to start new tasks.
description: |
    These APIs are supported on iOS 7 and later.

    The NSURLSession class and related classes provide an API for downloading content. 
    This API provides a rich set of delegate methods for supporting authentication and gives 
    your app the ability to perform background downloads when your app is not running or, in iOS, 
    while your app is suspended.

    [iOS Background Services guide](http://docs.appcelerator.com/platform/latest/#!/guide/iOS_Background_Services).

extends: Titanium.Module
osver: {ios: {min: "7.0.0"}}
platforms: [iphone, ipad]
since: 6.1.0

methods:
  - name: finishTasksAndInvalidate
    summary: Invalidates the given session object, allowing any outstanding tasks to finish.
    description: |
        This method returns immediately without waiting for tasks to finish. Once a session is invalidated,
        new tasks cannot be created in the session, but existing tasks continue until completion. Once
        invalidated, references to the events and callback objects are broken. Session objects cannot be
        reused. To cancel all outstanding tasks, call `invalidateAndCancel` instead.

  - name: invalidateAndCancel
    summary: Cancels all outstanding tasks and then invalidates the session object.
    description: |
        Once invalidated, references to the events and callback objects are broken. 
        Session objects cannot be reused. To allow outstanding tasks to run until 
        completion, call `finishTasksAndInvalidate` instead.
         
  - name: downloadTask
    summary: |
        Creates a download task for the specified URL, within the provided session 
        object and saves the results to a file.
    description: |
        Once this function is called, the download starts automatically. The progress 
        of the download can be monitored by listening to the `downloadprogress`, 
        `downloadcompleted`, `sessioneventscompleted` and `sessioncompleted` events.
    parameters:
      - name: args
        summary: An object representing the arguments to add a new background task.
        type: DownloadTaskType
    returns:
        summary: Task's identifier number.
        type: String    
 
  - name: uploadTask
    summary: |
        Creates a upload task for the specified URL, within the provided session 
        object and local data.
    description: |
        Once this function is called, the upload starts automatically. The progress 
        of the upload can be monitored by listening to the `uploadprogress` and 
        `sessioncompleted` events.
    parameters:
      - name: args
        summary: An object representing the arguments to add a new upload task.
        type: UploadDataTaskType
    returns:
        summary: Task's identifier number.
        type: String 
 
  - name: dataTask
    summary: |
        Creates a data task for the specified URL, within the provided session 
        object and local data.
    description: |
        An data task does not provide any additional functionality over a usual
        session task and its presence is merely to provide lexical differentiation 
        from download and upload tasks.
        
        Once this function is called, the task starts automatically. Once finished,
        the data task will call the `sessioncompleted` event containing infos about
        the response.
    parameters:
      - name: args
        summary: An object representing the arguments to add a new task task.
        type: UploadDataTaskType
    returns:
        summary: Task's identifier number.
        type: String          

  - name: reset
    summary: Empties all cookies, cache and credential stores, removes disk files, calls <Modules.URLSession.Session.flush>.
    parameters:
      - name: callback
        summary: Callback to be invoked when the reset completes.
        type: Callback<CompletedCallback>

  - name: flush
    summary: Flushes storage to disk and clear transient network caches.
    parameters:
      - name: callback
        summary: Callback to be invoked when the reset completes.
        type: Callback<CompletedCallback>

properties:
  - name: configuration
    summary: The configuration used for this url session.
    description: |
        Configuration options for an <Modules.URLSession.Session> object.  
        When a session is created, a copy of the configuration object is made.
        you cannot modify the configuration of a session after it has been created.
     
        The shared session uses the global singleton credential, cache
        and cookie storage objects.
     
        An ephemeral session has no persistent disk storage for cookies,
        cache or credentials.
     
        A background session can be used to perform networking operations
        on behalf of a suspended application, within certain constraints.
    optional: false
    availability: creation
    type: Modules.URLSession.SessionConfiguration

---
name: DownloadTaskType
summary: The parameter for [downloadTask](Modules.URLSession.Session.downloadTask) method.
properties:
  - name: url
    summary: The remote url used for this data task.
    type: String

---
name: UploadDataTaskType
summary: The parameter for [uploadTask](Modules.URLSession.Session.uploadTask) method.
properties:
  - name: url
    summary: The remote url used for this data task.
    type: String
    optional: false

  - name: data
    summary: The data blob used for this data task.
    type: Titanium.Blob
    optional: false

  - name: method
    summary: The request method (e.g. POST or PUT)
    default: POST
    type: String

  - name: requestHeaders
    summary: Additional request headers to pass to the request.
    type: String

---
name: CompletedCallback
summary: Simple object passed to callback functions for <Modules.URLSession.Session.reset> and <Modules.URLSession.Session.flush>
properties:
  - name: completed
    summary: Whetehr request is completed (always `true`)
    type: Boolean
    value: 'true'